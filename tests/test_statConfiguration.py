import os
from unittest import TestCase

from services import StatConfiguration
from testing_tools import FakeOs


class TestStatConfiguration(TestCase):
    def setUp(self):
        self._fakeOs = FakeOs('services')

    def tearDown(self):
        self._fakeOs.restoreOriginalModule()

    def test__new__basics(self):
        config = StatConfiguration()
        self.assertIsNotNone(config.DUMMIES_DIRECTORY)
        self.assertIsNotNone(config.OUTPUT_DIRECTORY)
        self.assertIsNotNone(config.PRODUCT_DIRECTORY)
        self.assertIsNotNone(config.LOGS_DIRECTORY)
        self.assertIsNotNone(config.PACKED_DIRECTORY)
        self.assertIsNotNone(config.AV_BYPASS_DIRECTORY)

    def test__new__isSingleton(self):
        firstInstance = StatConfiguration()
        secondInstance = StatConfiguration()
        self.assertEqual(firstInstance, secondInstance)

    def test_getToolDirectory(self):
        directory = StatConfiguration().getToolDirectory()
        self.assertEqual(os.path.relpath('..'), directory)

    def test_autoGeneratedMakfile(self):
        filePath = StatConfiguration().autoGeneratedMakfile
        self.assertEqual("{0}/stat.mak".format(StatConfiguration().OUTPUT_DIRECTORY), filePath)
